{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialSte = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    }\n\n  }\n});\n\nconst counterReducer = (state = initialSte, action) => {\n  if (action.type === \"increment\") {\n    return { ...state,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return { ...state,\n      counter: state.counter + action.amount\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return { ...state,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/workspace/REACT/counter-react-app/src/store/index.js"],"names":["createStore","createSlice","initialSte","counter","showCounter","name","initialState","reducers","increment","state","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,UAAU,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAAnB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVC,EAAAA,YAFU;AAGVC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD;;AAHO;AAHA,CAAD,CAAX;;AAUA,MAAMO,cAAc,GAAG,CAACD,KAAK,GAAGP,UAAT,EAAqBS,MAArB,KAAgC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO,EAAE,GAAGH,KAAL;AAAYN,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB;AAArC,KAAP;AACD;;AAED,MAAIQ,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO,EAAE,GAAGH,KAAL;AAAYN,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB;AAArC,KAAP;AACD;;AAED,MAAIQ,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO,EAAE,GAAGH,KAAL;AAAYN,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBQ,MAAM,CAACE;AAA5C,KAAP;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,EAAE,GAAGH,KAAL;AAAYL,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAAhC,KAAP;AACD;;AACD,SAAOK,KAAP;AACD,CAjBD;;AAmBA,MAAMK,KAAK,GAAGd,WAAW,CAACU,cAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialSte = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n  },\r\n});\r\n\r\nconst counterReducer = (state = initialSte, action) => {\r\n  if (action.type === \"increment\") {\r\n    return { ...state, counter: state.counter + 1 };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return { ...state, counter: state.counter - 1 };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return { ...state, counter: state.counter + action.amount };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return { ...state, showCounter: !state.showCounter };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}