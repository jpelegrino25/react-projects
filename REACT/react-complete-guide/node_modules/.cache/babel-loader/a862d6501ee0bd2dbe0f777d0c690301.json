{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\REACT\\\\react-complete-guide\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = props => {\n  _s();\n\n  const defaultCartState = {\n    items: [],\n    totalAmount: 0\n  };\n\n  const cartReducer = (state, action) => {\n    if (action.type === \"ADD\") {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const itemExistingId = state.items.findIndex(item => item.id === action.item.id);\n      const cartExistingItem = state.items[itemExistingId];\n      let updatedItems;\n\n      if (cartExistingItem) {\n        const updatedItem = { ...cartExistingItem,\n          amount: cartExistingItem.amount + action.item.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[itemExistingId] = updatedItem;\n      } else {\n        updatedItems = [...state.items, action.item];\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n\n    if (action.type === \"REMOVE\") {\n      const itemExistingId = state.items.findIndex(item => item.id === action.id);\n      const cartExistingItem = state.items[itemExistingId];\n      const updateTotalAmount = state.totalAmount - cartExistingItem.price;\n      let updatedItems;\n\n      if (cartExistingItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n        const updatedItem = { ...cartExistingItem,\n          amount: cartExistingItem.amount - 1\n        };\n        updatedItems = [...state.items];\n        updatedItems[itemExistingId] = updatedItem;\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updateTotalAmount\n      };\n    }\n\n    return defaultCartState;\n  };\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/workspace/REACT/react-complete-guide/src/store/CartProvider.js"],"names":["CartContext","useReducer","CartProvider","props","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","itemExistingId","findIndex","id","cartExistingItem","updatedItems","updatedItem","updateTotalAmount","filter","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst CartProvider = (props) => {\r\n  const defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n  };\r\n\r\n  const cartReducer = (state, action) => {\r\n    if (action.type === \"ADD\") {\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n\r\n      const itemExistingId = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n\r\n      const cartExistingItem = state.items[itemExistingId];\r\n      let updatedItems;\r\n\r\n      if (cartExistingItem) {\r\n        const updatedItem = {\r\n          ...cartExistingItem,\r\n          amount: cartExistingItem.amount + action.item.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[itemExistingId] = updatedItem;\r\n      } else {\r\n        updatedItems = [...state.items, action.item];\r\n      }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n\r\n    if (action.type === \"REMOVE\") {\r\n      const itemExistingId = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n\r\n      const cartExistingItem = state.items[itemExistingId];\r\n      const updateTotalAmount = state.totalAmount - cartExistingItem.price;\r\n      let updatedItems;\r\n      if (cartExistingItem.amount === 1) {\r\n        updatedItems = state.items.filter((item) => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = {\r\n          ...cartExistingItem,\r\n          amount: cartExistingItem.amount - 1,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[itemExistingId] = updatedItem;\r\n      }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updateTotalAmount,\r\n      };\r\n    }\r\n\r\n    return defaultCartState;\r\n  };\r\n\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}