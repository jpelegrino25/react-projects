{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\REACT\\\\react-complete-guide\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = props => {\n  _s();\n\n  const defaultCartState = {\n    items: [],\n    totalAmount: 0\n  };\n\n  const cartReducer = (state, action) => {\n    if (action.type === \"ADD\") {\n      const updateItems = [...state.items, action.item];\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const itemExistingId = state.items.findIndex(item => item.id === action.item.id);\n      return {\n        items: updateItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n\n    return defaultCartState;\n  };\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/workspace/REACT/react-complete-guide/src/store/CartProvider.js"],"names":["CartContext","useReducer","CartProvider","props","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateItems","item","updatedTotalAmount","price","amount","itemExistingId","findIndex","id","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,EADgB;AAEvBC,IAAAA,WAAW,EAAE;AAFU,GAAzB;;AAKA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,YAAMC,WAAW,GAAG,CAAC,GAAGH,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACG,IAAxB,CAApB;AACA,YAAMC,kBAAkB,GACtBL,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYE,KAAZ,GAAoBL,MAAM,CAACG,IAAP,CAAYG,MADtD;AAGA,YAAMC,cAAc,GAAGR,KAAK,CAACH,KAAN,CAAYY,SAAZ,CACpBL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYT,MAAM,CAACG,IAAP,CAAYM,EADb,CAAvB;AAIA,aAAO;AACLb,QAAAA,KAAK,EAAEM,WADF;AAELL,QAAAA,WAAW,EAAEO;AAFR,OAAP;AAID;;AACD,WAAOT,gBAAP;AACD,GAhBD;;AAkBA,QAAM,CAACe,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAChDM,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMiB,cAAc,GAAIT,IAAD,IAAU;AAC/BQ,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMU,iBAAiB,GAAIJ,EAAD,IAAQ;AAChCE,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBQ,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG;AAClBlB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBkB,IAAAA,OAAO,EAAEH,cAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGpB,KAAK,CAACuB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/CD;;GAAMxB,Y;;KAAAA,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst CartProvider = (props) => {\r\n  const defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n  };\r\n\r\n  const cartReducer = (state, action) => {\r\n    if (action.type === \"ADD\") {\r\n      const updateItems = [...state.items, action.item];\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n\r\n      const itemExistingId = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n\r\n      return {\r\n        items: updateItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n    return defaultCartState;\r\n  };\r\n\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}