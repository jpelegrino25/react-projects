{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\REACT\\\\01-starting-project3\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enterName, setEnterName] = useState({\n    name: \"\"\n  });\n  const [inputTouched, setInputTouched] = useState(false);\n  const inputIsValid = enterName.name.trim() !== \"\";\n  const nameInputIsInvalid = !inputIsValid && inputTouched;\n\n  const changeHandler = e => {\n    setEnterName(prev => {\n      return { ...prev,\n        name: e.target.value\n      };\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    setInputTouched(true);\n\n    if (!inputIsValid) {\n      return;\n    }\n\n    console.log(enterName.name);\n    setEnterName({ ...enterName,\n      name: \"\"\n    });\n  };\n\n  const onBlurHandler = e => {\n    setInputTouched(true);\n  };\n\n  const inputNameClasses = inputIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeHandler,\n        value: enterName.name,\n        onBlur: onBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name most not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"vnWjXeiQRvJCwhC3H735eaM1gIE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/workspace/REACT/01-starting-project3/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enterName","setEnterName","name","inputTouched","setInputTouched","inputIsValid","trim","nameInputIsInvalid","changeHandler","e","prev","target","value","onSubmitHandler","preventDefault","console","log","onBlurHandler","inputNameClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA1C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMQ,YAAY,GAAGL,SAAS,CAACE,IAAV,CAAeI,IAAf,OAA0B,EAA/C;AACA,QAAMC,kBAAkB,GAAG,CAACF,YAAD,IAAiBF,YAA5C;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC3BR,IAAAA,YAAY,CAAES,IAAD,IAAU;AACrB,aAAO,EAAE,GAAGA,IAAL;AAAWR,QAAAA,IAAI,EAAEO,CAAC,CAACE,MAAF,CAASC;AAA1B,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,QAAMC,eAAe,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,cAAF;AAEAV,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI,CAACC,YAAL,EAAmB;AACjB;AACD;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAS,CAACE,IAAtB;AACAD,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBE,MAAAA,IAAI,EAAE;AAAtB,KAAD,CAAZ;AACD,GATD;;AAWA,QAAMe,aAAa,GAAIR,CAAD,IAAO;AAC3BL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMc,gBAAgB,GAAGb,YAAY,GACjC,cADiC,GAEjC,sBAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEV,aAHZ;AAIE,QAAA,KAAK,EAAER,SAAS,CAACE,IAJnB;AAKE,QAAA,MAAM,EAAEe;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGV,kBAAkB,iBACjB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnDD;;GAAMT,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enterName, setEnterName] = useState({ name: \"\" });\n  const [inputTouched, setInputTouched] = useState(false);\n\n  const inputIsValid = enterName.name.trim() !== \"\";\n  const nameInputIsInvalid = !inputIsValid && inputTouched;\n\n  const changeHandler = (e) => {\n    setEnterName((prev) => {\n      return { ...prev, name: e.target.value };\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    setInputTouched(true);\n    if (!inputIsValid) {\n      return;\n    }\n    console.log(enterName.name);\n    setEnterName({ ...enterName, name: \"\" });\n  };\n\n  const onBlurHandler = (e) => {\n    setInputTouched(true);\n  };\n\n  const inputNameClasses = inputIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={inputNameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={changeHandler}\n          value={enterName.name}\n          onBlur={onBlurHandler}\n        />\n      </div>\n      {nameInputIsInvalid && (\n        <p className=\"error-text\">Name most not be empty</p>\n      )}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}