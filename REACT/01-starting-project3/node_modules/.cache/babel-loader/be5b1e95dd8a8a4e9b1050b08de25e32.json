{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\REACT\\\\01-starting-project3\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enterName, setEnterName] = useState({\n    name: \"\"\n  });\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [inputTouched, setInputTouched] = useState(false);\n  const inputIsValid = enterName.name.trim() !== \"\";\n\n  const changeHandler = e => {\n    setEnterName(prev => {\n      return { ...prev,\n        name: e.target.value\n      };\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    setInputTouched(true);\n\n    if (!inputIsValid) {\n      return;\n    }\n\n    console.log(enterName.name);\n    setEnterName({ ...enterName,\n      name: \"\"\n    });\n  };\n\n  const onBlurHandler = e => {\n    setInputTouched(true);\n\n    if (enterName.name === \"\") {\n      setNameIsValid(false);\n      return;\n    }\n  };\n\n  const validInput = !nameIsValid && !inputTouched;\n  const inputNameClasses = validInput ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeHandler,\n        value: enterName.name,\n        onBlur: onBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !validInput && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name most not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"aHN5p0XFl0/99jC7GXR0EimbKQ4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/workspace/REACT/01-starting-project3/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enterName","setEnterName","name","nameIsValid","setNameIsValid","inputTouched","setInputTouched","inputIsValid","trim","changeHandler","e","prev","target","value","onSubmitHandler","preventDefault","console","log","onBlurHandler","validInput","inputNameClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMU,YAAY,GAAGP,SAAS,CAACE,IAAV,CAAeM,IAAf,OAA0B,EAA/C;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BT,IAAAA,YAAY,CAAEU,IAAD,IAAU;AACrB,aAAO,EAAE,GAAGA,IAAL;AAAWT,QAAAA,IAAI,EAAEQ,CAAC,CAACE,MAAF,CAASC;AAA1B,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,QAAMC,eAAe,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI,CAACC,YAAL,EAAmB;AACjB;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACE,IAAtB;AACAD,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBE,MAAAA,IAAI,EAAE;AAAtB,KAAD,CAAZ;AACD,GATD;;AAWA,QAAMgB,aAAa,GAAIR,CAAD,IAAO;AAC3BJ,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAIN,SAAS,CAACE,IAAV,KAAmB,EAAvB,EAA2B;AACzBE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD;AACF,GAND;;AAQA,QAAMe,UAAU,GAAG,CAAChB,WAAD,IAAgB,CAACE,YAApC;AAEA,QAAMe,gBAAgB,GAAGD,UAAU,GAAG,cAAH,GAAoB,sBAAvD;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEL,eAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEX,aAHZ;AAIE,QAAA,KAAK,EAAET,SAAS,CAACE,IAJnB;AAKE,QAAA,MAAM,EAAEgB;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWG,CAACC,UAAD,iBAAe;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXlB,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArDD;;GAAMrB,W;;KAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enterName, setEnterName] = useState({ name: \"\" });\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [inputTouched, setInputTouched] = useState(false);\n\n  const inputIsValid = enterName.name.trim() !== \"\";\n\n  const changeHandler = (e) => {\n    setEnterName((prev) => {\n      return { ...prev, name: e.target.value };\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    setInputTouched(true);\n    if (!inputIsValid) {\n      return;\n    }\n    console.log(enterName.name);\n    setEnterName({ ...enterName, name: \"\" });\n  };\n\n  const onBlurHandler = (e) => {\n    setInputTouched(true);\n    if (enterName.name === \"\") {\n      setNameIsValid(false);\n      return;\n    }\n  };\n\n  const validInput = !nameIsValid && !inputTouched;\n\n  const inputNameClasses = validInput ? \"form-control\" : \"form-control invalid\";\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={inputNameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={changeHandler}\n          value={enterName.name}\n          onBlur={onBlurHandler}\n        />\n      </div>\n      {!validInput && <p className=\"error-text\">Name most not be empty</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}